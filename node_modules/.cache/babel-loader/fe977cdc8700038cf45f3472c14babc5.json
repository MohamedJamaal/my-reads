{"ast":null,"code":"var _jsxFileName = \"G:\\\\EgyFWD\\\\nd0191-c1-myreads-main\\\\nd0191-c1-myreads-main\\\\starter\\\\src\\\\components\\\\SearchPages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\nimport Book from './Book';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchPages(props) {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [newBooks, setNewBooks] = useState([]);\n  const [searchErr, setSearchErr] = useState(false);\n  const {\n    books,\n    selectShelf\n  } = props;\n\n  const getBooks = e => {\n    const query = e.target.value;\n    setQuery({\n      query\n    });\n\n    if (query) {\n      BooksAPI.search(query.trim(), 20).then(books => {\n        books.length > 0 ? setNewBooks({\n          newBooks: books,\n          searchErr: false\n        }) : setNewBooks({\n          newBooks: [],\n          searchErr: true\n        });\n      });\n    } else setNewBooks({\n      newBooks: [],\n      searchErr: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by Title, Author or ISBN\",\n          value: query,\n          onChange: getBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [newBooks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Search Returned \", newBooks.length, \" Books\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: newBooks.map(book => /*#__PURE__*/_jsxDEV(Book, {\n            book: book,\n            books: books,\n            selectShelf: selectShelf\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), searchErr && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search did NOT return any Books. Please try again !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPages, \"wG+P9KMRfNYIBOkbaYoivm0QE0Q=\");\n\n_c = SearchPages;\nSearchPages.propTypes = {\n  books: PropTypes.array.isRequired,\n  selectShelf: PropTypes.func.isRequired\n};\nexport default SearchPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPages\");","map":{"version":3,"names":["React","useState","NavLink","BooksAPI","Book","PropTypes","SearchPages","props","query","setQuery","newBooks","setNewBooks","searchErr","setSearchErr","books","selectShelf","getBooks","e","target","value","search","trim","then","length","map","book","id","propTypes","array","isRequired","func"],"sources":["G:/EgyFWD/nd0191-c1-myreads-main/nd0191-c1-myreads-main/starter/src/components/SearchPages.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as BooksAPI from '../BooksAPI';\r\nimport Book from './Book';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SearchPages(props) {\r\n  const [query, setQuery] = useState('');\r\n  const [newBooks, setNewBooks] = useState([]);\r\n  const [searchErr, setSearchErr] = useState(false);\r\n\r\n  const { books, selectShelf } = props;\r\n\r\n  const getBooks = (e) => {\r\n    const query = e.target.value;\r\n    setQuery({ query });\r\n    if (query) {\r\n      BooksAPI.search(query.trim(), 20).then((books) => {\r\n        books.length > 0\r\n          ? setNewBooks({ newBooks: books, searchErr: false })\r\n          : setNewBooks({ newBooks: [], searchErr: true });\r\n      });\r\n    } else setNewBooks({ newBooks: [], searchErr: false });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <NavLink to=\"/\">close</NavLink>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by Title, Author or ISBN\"\r\n            value={query}\r\n            onChange={getBooks}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {newBooks.length > 0 && (\r\n          <div>\r\n            <h3>Search Returned {newBooks.length} Books</h3>\r\n            <ol>\r\n              {newBooks.map((book) => (\r\n                <Book\r\n                  book={book}\r\n                  books={books}\r\n                  key={book.id}\r\n                  selectShelf={selectShelf}\r\n                />\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        )}\r\n        {searchErr && (\r\n          <h3>Search did NOT return any Books. Please try again !</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchPages.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  selectShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPages;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAC1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAM;IAAEa,KAAF;IAASC;EAAT,IAAyBR,KAA/B;;EAEA,MAAMS,QAAQ,GAAIC,CAAD,IAAO;IACtB,MAAMT,KAAK,GAAGS,CAAC,CAACC,MAAF,CAASC,KAAvB;IACAV,QAAQ,CAAC;MAAED;IAAF,CAAD,CAAR;;IACA,IAAIA,KAAJ,EAAW;MACTL,QAAQ,CAACiB,MAAT,CAAgBZ,KAAK,CAACa,IAAN,EAAhB,EAA8B,EAA9B,EAAkCC,IAAlC,CAAwCR,KAAD,IAAW;QAChDA,KAAK,CAACS,MAAN,GAAe,CAAf,GACIZ,WAAW,CAAC;UAAED,QAAQ,EAAEI,KAAZ;UAAmBF,SAAS,EAAE;QAA9B,CAAD,CADf,GAEID,WAAW,CAAC;UAAED,QAAQ,EAAE,EAAZ;UAAgBE,SAAS,EAAE;QAA3B,CAAD,CAFf;MAGD,CAJD;IAKD,CAND,MAMOD,WAAW,CAAC;MAAED,QAAQ,EAAE,EAAZ;MAAgBE,SAAS,EAAE;IAA3B,CAAD,CAAX;EACR,CAVD;;EAYA,oBACE;IAAA,wBACE;MAAA,wBACE,QAAC,OAAD;QAAS,EAAE,EAAC,GAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uBACE;UACE,IAAI,EAAC,MADP;UAEE,WAAW,EAAC,iCAFd;UAGE,KAAK,EAAEJ,KAHT;UAIE,QAAQ,EAAEQ;QAJZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAA,WACGN,QAAQ,CAACa,MAAT,GAAkB,CAAlB,iBACC;QAAA,wBACE;UAAA,+BAAqBb,QAAQ,CAACa,MAA9B;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UACGb,QAAQ,CAACc,GAAT,CAAcC,IAAD,iBACZ,QAAC,IAAD;YACE,IAAI,EAAEA,IADR;YAEE,KAAK,EAAEX,KAFT;YAIE,WAAW,EAAEC;UAJf,GAGOU,IAAI,CAACC,EAHZ;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,EAgBGd,SAAS,iBACR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GAtDQN,W;;KAAAA,W;AAwDTA,WAAW,CAACqB,SAAZ,GAAwB;EACtBb,KAAK,EAAET,SAAS,CAACuB,KAAV,CAAgBC,UADD;EAEtBd,WAAW,EAAEV,SAAS,CAACyB,IAAV,CAAeD;AAFN,CAAxB;AAKA,eAAevB,WAAf"},"metadata":{},"sourceType":"module"}